name: Build and deploy Node.js app to Azure Web App - TRCAthenaV2

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      REACT_APP_TBA_API_KEY: ${{ secrets.REACT_APP_TBA_API_KEY }}
      REACT_APP_NEXUS_API_KEY: ${{ secrets.REACT_APP_NEXUS_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Install dependencies with pnpm
        run: pnpm install

      - name: Build with pnpm
        run: pnpm run build

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-app
          path: |
            .next
            public
            package.json
            pnpm-lock.yaml

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: nextjs-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_09C0E85AF1F743AAAE0E321012D11BA7 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_CECEDE74EC604A6DBAEE40C96A81181C }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_2548ABA825094A798804AA469CD3B3B0 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'TRCAthenaV2'
          slot-name: 'Production'
          package: .

      # Optionally, run pnpm install --prod as a post-deployment script
      - name: 'Install production dependencies on Azure'
        run: |
          curl -fsSL https://get.pnpm.io/install.sh | sh -
          pnpm install --prod
        shell: bash
        # You may need to adjust this depending on your Azure Web App settings.
